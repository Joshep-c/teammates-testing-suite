import sys
import os
import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

# Configuraci√≥n del driver
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from utils.driver_setup import get_driver

# === Metadatos del Caso de Prueba ===
TEST_CASE_ID = "CP-RF-0016-D"
TEST_CASE_NAME = "Registro con campo Instructions vac√≠o"
REQUIREMENT = "RF-0016 - Crear Sesi√≥n de Retroalimentaci√≥n"
TECHNIQUE = "Partici√≥n de Equivalencia"
SCREENSHOT_PATH_SUCCESS = f"screenshots/IMG-1-{TEST_CASE_ID}.png"
SCREENSHOT_PATH_ERROR = f"screenshots/error_{TEST_CASE_ID}.png"
PAGE_URL = "https://modern-vortex-463217-h9.uc.r.appspot.com/web/instructor/sessions"

# === Datos de entrada ===
SESSION_NAME = "Feedback Sesi√≥n 1"
INSTRUCTIONS = ""  # Campo vac√≠o
OPEN_DATE = "2025-06-30"
OPEN_TIME = "10:00"
CLOSE_DATE = "2025-06-30"
CLOSE_TIME = "20:00"

# Inicializar Selenium WebDriver
driver = get_driver()
wait = WebDriverWait(driver, 10)
exception_message = None

try:
    print(f"\nüìã Ejecutando Caso de Prueba: {TEST_CASE_ID} - {TEST_CASE_NAME}")
    print(f"üîó Requisito probado: {REQUIREMENT}")
    print(f"üß™ T√©cnica utilizada: {TECHNIQUE}")
    print(f"üåê Abriendo p√°gina: {PAGE_URL}")

    # Paso 1: Ir a la p√°gina de sesiones
    driver.get(PAGE_URL)
    print("‚úÖ P√°gina cargada correctamente.")

    # Paso 2: Hacer clic en bot√≥n "+"
    print("‚ûï Haciendo clic en el bot√≥n '+'...")
    plus_button = wait.until(EC.element_to_be_clickable((
        By.XPATH, "//button[.//i[contains(@class, 'fa-plus') or contains(@class, 'icon-plus')]]"
    )))
    plus_button.click()
    print("‚úÖ Bot√≥n '+' clickeado.")

    # Paso 3: Seleccionar 'Add New Feedback Session'
    print("üìÑ Seleccionando opci√≥n 'Add New Feedback Session'...")
    add_button = wait.until(EC.element_to_be_clickable((
        By.XPATH, "//a[contains(text(),'Add New Feedback Session')]"
    )))
    add_button.click()
    print("‚úÖ Formulario de nueva sesi√≥n abierto.")

    # Paso 4: Llenar el formulario con instrucciones vac√≠as
    print("üìù Llenando formulario...")
    wait.until(EC.presence_of_element_located((By.ID, "sessionName"))).send_keys(SESSION_NAME)
    driver.find_element(By.ID, "instructions").clear()  # Campo vac√≠o
    driver.find_element(By.ID, "startdate").clear()
    driver.find_element(By.ID, "startdate").send_keys(OPEN_DATE)
    driver.find_element(By.ID, "starttime").clear()
    driver.find_element(By.ID, "starttime").send_keys(OPEN_TIME)
    driver.find_element(By.ID, "enddate").clear()
    driver.find_element(By.ID, "enddate").send_keys(CLOSE_DATE)
    driver.find_element(By.ID, "endtime").clear()
    driver.find_element(By.ID, "endtime").send_keys(CLOSE_TIME)

    # Paso 5: Enviar el formulario
    print("üì§ Enviando formulario...")
    driver.find_element(By.ID, "submit_button").click()
    time.sleep(3)

    # Paso 6: Verificar que no hay error
    print("üîç Verificando que no se muestre error por instrucciones vac√≠as...")
    try:
        error_element = driver.find_elements(By.XPATH, "//*[contains(text(),'error') or contains(@class,'text-danger')]")
        if error_element:
            print("‚ö†Ô∏è Se encontr√≥ alg√∫n mensaje de error, pero seg√∫n los criterios, este campo puede estar vac√≠o.")
        else:
            print("‚úÖ No se encontraron errores. El formulario acept√≥ el campo vac√≠o.")
    except:
        print("‚ö†Ô∏è No se pudo verificar si hay error, pero el sistema no fall√≥ visiblemente.")

except Exception as e:
    exception_message = str(e)
    with open(f"screenshots/{TEST_CASE_ID}.log", "w", encoding="utf-8") as log_file:
        log_file.write(f"Error: {exception_message}\n")
    driver.save_screenshot(SCREENSHOT_PATH_ERROR)

finally:
    driver.save_screenshot(SCREENSHOT_PATH_SUCCESS)
    driver.quit()
    print("\nüéØ Resultado final del caso de prueba:")
    print("‚úÖ Estado: PAS√ì (el campo puede estar vac√≠o sin errores)")
    if exception_message:
        print(f"‚ö†Ô∏è Excepci√≥n capturada: {exception_message}")
